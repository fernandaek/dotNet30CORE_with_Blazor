#pragma checksum "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\Pages\Chapter_12\Exercise12_01.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f90e6793f055baf2ef09c3e5df3853beb44a12f5"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Exercise1.Pages.Chapter_12
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Exercise1;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\_Imports.razor"
using Exercise1.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\Pages\Chapter_12\Exercise12_01.razor"
using Exercise1.Classes.Chapter_12_Inheritance;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/exercise-11-01")]
    public class Exercise12_01 : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 69 "C:\Users\Fernanda Ek\Documents\EC Utbildning\C-Sharp\Exercise1\Exercise1\Pages\Chapter_12\Exercise12_01.razor"
       

    Substances substances = new Substances();
    List<Matter> matters = new List<Matter>();

    string newName, newMass, state, error = string.Empty;

    void GetAll()
    {
        matters = substances.Get();
    }

    protected override void OnInitialized()
    {
        GetAll();
    }

    void Get(States states)
    {
        error = string.Empty;
        matters = substances.Get(s => s.State.Equals(state));
    }

    void Add()
    {
        try
        {
            var error = string.Empty;

            var success = int.TryParse(newMass, out int mass);

            if (success == true)
            {

                var stateValue = substances.GetStateValue(state);

                switch (stateValue)
                {
                    case States.Liquid:
                        substances.Add(new Liquid(newName, mass));
                        break;
                    case States.Gas:
                        substances.Add(new Gas(newName, mass));
                        break;
                    case States.Plasma:
                        substances.Add(new Plasma(newName, mass));
                        break;
                    case States.Solid:
                        substances.Add(new Solid(newName, mass));
                        break;
                }
                newName = string.Empty;
                newMass = string.Empty;
                state = string.Empty;
            }
            else error = $"Could not add the substance.";
        }

        catch
        {

            var error = $"Could not add the substance";
        }
    }



#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
